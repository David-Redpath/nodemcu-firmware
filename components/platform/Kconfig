menu "NodeMCU platform config"

    config NODEMCU_NODE_DEBUG
        bool "Enable NODE_DBG() output"
        default "n"
        help
            Enable debugging output via NODE_DBG(). This is VERY chatty.
            For development/debugging use only.

    config NODEMCU_NODE_ERR
        bool "Enable NODE_ERR() output"
        default "y"
        help
            Enable error reporting via NODE_ERR().

            It is recommended to leave this enabled - if it ever produces
            output, something has gone seriously wrong and you probably want
            to know about it.

    config NODEMCU_FS_OBJ_NAME_LEN
        int "Make filesystem object name length"
        default 31
        help
            Maximum name of filesystem objects (files, directories).

    config NODEMCU_SPIFFS_MAX_OPEN_FILES
        int "Maximum number of open files for SPIFFS"
        default 4
        help
            Maximum number of open files for SPIFFS

    config NODEMCU_BUILD_SPIFFS
        bool
        default "y"
        # I don't think we can deal without SPIFFS at this point, so always on for now

    config NODEMCU_BUILD_FATFS
        bool "Support for FAT filesystems"
        default "n"
        select NODEMCU_CMODULE_SDMMC
        help
            Include support for accessing FAT filesystems on SD cards.

    config NODEMCU_EMBED_LFS
        bool "Embed LFS as part of the NodeMCU firmware"
        default "n"
        help
            The LFS (Lua Flash Store) normally has its own partition entry,
            and can can be replaced at will. Optionally, the LFS can instead
            be permanently embedded into the NodeMCU firmware image itself.
            This can be useful for scenarios where over-the-air firmware
            upgrades are needed to also bundle Lua code. The major downside
            is that once embedded, the LFS can no longer be changed, as
            doing so would break the firmware checksums and signatures and
            leave the system unable to boot.

            The default option is to not embed the LFS, in which case LFS is
            looked for in a partition of type 0xC2 and subtype 0x01.

            To embed LFS data into firmware, use:
              ./tools/embed_lfs.sh /path/to/file1.lua /path/to/file2.lua ...

    config NODEMCU_EMBEDDED_LFS_SIZE
        hex "Embedded LUA Flash Store size"
        default 0x0
        depends on NODEMCU_EMBED_LFS
        help
            Embedded LUA Flash Store size. Set to zero to use an LFS partition
            instead of embedding the LFS within the NodeMCU firmware itself.

endmenu
